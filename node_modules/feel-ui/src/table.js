var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
(function (factory) {
    if (typeof module === 'object' && typeof module.exports === 'object') {
        var v = factory(require, exports); if (v !== undefined) module.exports = v;
    }
    else if (typeof define === 'function' && define.amd) {
        define(["require", "exports", "angular2/core", "angular2/common", "./pipes/sort-pipe"], factory);
    }
})(function (require, exports) {
    var core_1 = require("angular2/core");
    var common_1 = require("angular2/common");
    var sort_pipe_1 = require("./pipes/sort-pipe");
    var TableComponent = (function () {
        function TableComponent() {
            this.sortOrder = "something";
            this.sortItems = ["something"];
        }
        TableComponent.prototype.addSort = function (propertyName) {
            if (this.sortOrder === propertyName) {
                this.sortOrder = "-" + propertyName;
            }
            else {
                this.sortOrder = propertyName;
            }
            this.sortItems[0] = this.sortOrder;
        };
        __decorate([
            core_1.Input()
        ], TableComponent.prototype, "data", void 0);
        __decorate([
            core_1.Input()
        ], TableComponent.prototype, "columns", void 0);
        TableComponent = __decorate([
            core_1.Component({
                directives: [common_1.NgClass],
                selector: "feel-table",
                pipes: [sort_pipe_1.SortPipe],
                //changeDetection: ChangeDetectionStrategy.OnPush,
                template: "<table>\n                  <thead>\n                     <th *ngFor=\"#column of columns\" (click)=addSort(column.propertyName)>\n                        <span>{{ column.propertyName }}</span>\n                        <span [ngClass]=\"{\n                                            'ascending': sortItems[0] === column.propertyName,\n                                            'descending': sortItems[0] === '-' + column.propertyName,\n                                            'sort-icon': true\n                                          }\" ></span>\n                     </th>\n                  </thead>\n                  <tbody>\n                     <tr *ngFor=\"#dataItem of data | sort: sortOrder\">\n                        <td *ngFor=\"#column of columns\">{{ dataItem[column.propertyName] }}</td>\n                     </tr>\n                  </tbody>\n               </table>"
            })
        ], TableComponent);
        return TableComponent;
    })();
    exports.TableComponent = TableComponent;
});
